let finalSchemesSelected = (rollingSchemes && selectedSchemesData && (Object.values(selectedSchemesData))).map((obj, key) => {
            let customObj = {...obj}
            if(!schemesNameCollection[obj.schid])
                schemesNameCollection[obj.schid] = obj.label
            return  <li >
                    <span class="launchDate">Launch Date : { ShowDateFormater(obj.launchDate)}</span>
                    <span  class="filterList active" onClick={()=> this.removeSchemeFuntion(customObj,key)} >{obj.label}</span>
                </li>
        })



        //////////////////////

              
        <div className='listBox'>
            <li  >

          {  <span> 
             <div>
 { abc.map(obj => ( 
                   <div >
                   <h2>

                     {/* <input className='list' value = {obj.name}  /> */}
                   {/* {console.log("hello brother",obj.name,obj,obj.schid)} */}
                     Name: {obj.name} {obj.legend}
                 <input className='list' value={obj.name} /> 

                   </h2>
                     </div>
                      ))}

                 </div>     

             </span>
}
                <span>
                </span>
                  
                 <span className='deleteBtn'> </span>
          </li>
             <button className='clearBtn'>Clear All<span className='deleteBtn'>X</span></button>
         </div>
        